## Autogenerated by Scribe. DO NOT MODIFY.

name: Admin
description: 'Endpoints for retrieving statistics and performance data for admins.'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/statistics/revenue
    metadata:
      groupName: Admin
      groupDescription: 'Endpoints for retrieving statistics and performance data for admins.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get total revenue'
      description: 'Returns the sum of all booking prices.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/statistics/field-performance
    metadata:
      groupName: Admin
      groupDescription: 'Endpoints for retrieving statistics and performance data for admins.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get field performance'
      description: 'Returns a list of fields with their booking counts.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/fields
    metadata:
      groupName: Admin
      groupDescription: 'Endpoints for managing fields (create, update, delete) as an admin.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create field'
      description: 'Allows admins to add a new field.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price_per_hour:
        name: price_per_hour
        description: 'Must be at least 0.'
        required: true
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_available:
        name: is_available
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: vmqeopfuudtdsufvyvddq
      type: consequatur
      price_per_hour: 45
      is_available: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/fields/{field_id}'
    metadata:
      groupName: Admin
      groupDescription: 'Endpoints for managing fields (create, update, delete) as an admin.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update field'
      description: 'Allows admins to update field details.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      field_id:
        name: field_id
        description: 'The ID of the field.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      field_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price_per_hour:
        name: price_per_hour
        description: 'Must be at least 0.'
        required: true
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_available:
        name: is_available
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: vmqeopfuudtdsufvyvddq
      type: consequatur
      price_per_hour: 45
      is_available: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/fields/{field_id}'
    metadata:
      groupName: Admin
      groupDescription: 'Endpoints for managing fields (create, update, delete) as an admin.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete field'
      description: 'Allows admins to remove a field from the system.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      field_id:
        name: field_id
        description: 'The ID of the field.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      field_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
